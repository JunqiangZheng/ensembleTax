ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
bayes.pr2.pretty <- idtax2df(bayes.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
idtax.pr2.pretty <- idtax2df(idtax.pr2.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
idtax.silva.pretty <- idtax2df(idtax.silva.sample,
db = "silva",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
bayes.pr2.pretty <- bayestax2df(bayes.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
head(idtax.pr2.pretty)
head(idtax.silva.pretty)
head(bayes.pr2.pretty)
idtax.silva.mapped2pr2 <- taxmapper(idtax.silva.pretty,
tt.ranks = colnames(idtax.silva.pretty)[3:ncol(idtax.silva.pretty)],
tax2map2 = "pr2",
exceptions = c("Archaea", "Bacteria"),
ignore.format = TRUE,
synonym.file = "default",
streamline = TRUE,
outfilez = NULL)
head(idtax.silva.mapped2pr2)
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(x,
tablenames = names(x),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(x)))
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(x),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(x)))
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(xx)))
library(ensembleTax)
knitr::opts_chunk$set(echo = TRUE)
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(xx)))
message("ensemble taxonomic assignments - counting NA's with no tie-breaking and no table weighting:")
head(eTax1)
unique(eTax1)
base::unique(eTax1)
setdiff(eTax1[[2]]$ASV)
setdiff(eTax1[[2]]$ASV, eTax1[[1]]$ASV)
setdiff(eTax1[[2]]$ASV, eTax1[[3]]$ASV)
library(ensembleTax)
knitr::opts_chunk$set(echo = TRUE)
library("ensembleTax")
data("idtax.pr2.sample")
data("idtax.silva.sample")
data("bayes.sample")
data("rubric.sample")
head(idtax.pr2.sample)
head(idtax.silva.sample)
head(bayes.sample)
head(rubric.sample)
idtax.pr2.pretty <- idtax2df(idtax.pr2.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
idtax.silva.pretty <- idtax2df(idtax.silva.sample,
db = "silva",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
bayes.pr2.pretty <- bayestax2df(bayes.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
head(idtax.pr2.pretty)
head(idtax.silva.pretty)
head(bayes.pr2.pretty)
idtax.silva.mapped2pr2 <- taxmapper(idtax.silva.pretty,
tt.ranks = colnames(idtax.silva.pretty)[3:ncol(idtax.silva.pretty)],
tax2map2 = "pr2",
exceptions = c("Archaea", "Bacteria"),
ignore.format = TRUE,
synonym.file = "default",
streamline = TRUE,
outfilez = NULL)
head(idtax.silva.mapped2pr2)
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(xx)))
message("ensemble taxonomic assignments - counting NA's with no tie-breaking and no table weighting:")
head(eTax1)
library(ensembleTax)
knitr::opts_chunk$set(echo = TRUE)
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(xx)))
message("ensemble taxonomic assignments - counting NA's with no tie-breaking and no table weighting:")
head(eTax1)
eTax2 <- ensembleTax(x,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=FALSE,
assign.threshold = 0,
weights=c(2,1,1))
eTax2 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=FALSE,
assign.threshold = 0,
weights=c(2,1,1))
message("ensemble taxonomic assignments - no counting na's, no tie-breaking and no table weighting:")
head(eTax2)
library(ensembleTax)
class(pr2v4.12.0)
typeof(pr2v4.12.0)
load("~/Documents/R/ensembleTax/data/silva.nr.v138.rda")
colnames(silva.nr.v138.rda)
colnames(silva.nr.v138)
library(ensembleTax)
?write.csv
??data
?data
?data.frame
?data
rubric <- rubric.sample
rubdf <- base::data.frame(svN = names(rubric), ASV = as.character(rubric, use.names = FALSE), stringsAsFactors = FALSE)
rubdf
example.file <- system.file("extdata", "sample_LCA_output.csv",
#' package = "ensembleTax", mustWork = TRUE)
)
example.file <- system.file("extdata", "sample_LCA_output.csv",package = "ensembleTax", mustWork = TRUE)
example.file
lca.file <- example.file
lcaer <- utils::read.csv(lca.file, header = FALSE, stringsAsFactors = FALSE)
lcaer
cc <- base::apply(lcaer, MARGIN = 1, FUN = function(x) length(base::unlist(base::gregexpr(";", x))))
nc <- max(cc)
lcadf <- base::data.frame(matrix(NA, nrow = nrow(lcaer), ncol = nc))
for (i in 1:nrow(lcaer)) {
this1 <- lcaer[i,"V2"]
nh <- base::unlist(base::gregexpr("No hits", this1))
na <- base::unlist(base::gregexpr("Not assigned", this1))
if (nh == -1 && na == -1) {
# there's at least some hits...
co <- base::unlist(base::gregexpr("cellular organisms", this1))
ii <- base::unlist(base::gregexpr(";", this1))
ii <- ii[ii > co]
for (j in 1:(length(ii) - 1)) {
lcadf[i,j] <- base::substr(this1,ii[j]+1,ii[j+1]-1)
}
} else {
# leave it as all NA
}
}
lcadf$svN <- lcaer$V1 # append the SV numbers to your output dataframe
rubdf <- base::data.frame(svN = names(rubric), ASV = as.character(rubric, use.names = FALSE), stringsAsFactors = FALSE)
lcadf <- base::merge(lcadf, rubdf, by.x = "svN", by.y = "svN") # merging to add ASV sequences
lcadf <- lcadf[ , c(1,ncol(lcadf), 2:(ncol(lcadf)-1))] # rearranging columns -- svN, ASV, taxonomy....
xx <- which(base::colSums(base::is.na(lcadf)) == nrow(lcadf)) # remove columns that are all NA
lcadf <- lcadf[ , -xx]
ranks <- setdiff(c("svN", "ASV"), colnames(lcadf))
lcadf <- sort_my_taxtab(lcadf, ranknames = ranks)
library(ensembleTax)
rm(list=ls())
data(""rubric.sample"")
data("rubric.sample")
rubdf <- base::data.frame(svN = names(rubric), ASV = as.character(rubric, use.names = FALSE), stringsAsFactors = FALSE)
rubric <- rubric.sample
rubdf <- base::data.frame(svN = names(rubric), ASV = as.character(rubric, use.names = FALSE), stringsAsFactors = FALSE)
data("rubric.sample")
example.file <- system.file("extdata", "sample_LCA_output.csv",
package = "ensembleTax", mustWork = TRUE)
df <- LCA2df(lca.file = example.file, rubric = rubric.sample)
df
data("rubric.sample")
example.file <- system.file("extdata", "sample_LCA_output.csv",
package = "ensembleTax", mustWork = TRUE)
df <- LCA2df(lca.file = example.file, rubric = rubric.sample)
library(ensembleTax)
data("rubric.sample")
example.file <- system.file("extdata", "sample_LCA_output.csv",
package = "ensembleTax", mustWork = TRUE)
df <- LCA2df(lca.file = example.file, rubric = rubric.sample)
library(ensembleTax)
data("rubric.sample")
example.file <- system.file("extdata", "sample_LCA_output.csv",
package = "ensembleTax", mustWork = TRUE)
df <- LCA2df(lca.file = example.file, rubric = rubric.sample)
head(df)
rubric
as.character(rubric.sample)
base::as.character(rubric.sample)
rubric.sample
base::data.frame(svN = names(rubric.sample), ASV = base::as.character(rubric.sample, use.names = FALSE), stringsAsFactors = FALSE)
names(rubric)
names(rubric.sample)
base::as.character(rubric, use.names = FALSE)
base::as.character(rubric.sample, use.names = FALSE)
length(names(rubric.sample))
length(base::as.character(rubric.sample, use.names = FALSE))
class(names(rubric.sample))
typeof(names(rubric.sample))
class(base::as.character(rubric.sample, use.names = FALSE))
typeof(base::as.character(rubric.sample, use.names = FALSE))
?install_github
library("devtools")
?install_github
devtools::document()
library(ensembleTax)
knitr::opts_chunk$set(echo = TRUE)
library("ensembleTax")
data("idtax.pr2.sample")
data("idtax.silva.sample")
data("bayes.sample")
data("rubric.sample")
head(idtax.pr2.sample)
head(idtax.silva.sample)
head(bayes.sample)
head(rubric.sample)
idtax.pr2.pretty <- idtax2df(idtax.pr2.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
idtax.silva.pretty <- idtax2df(idtax.silva.sample,
db = "silva",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
bayes.pr2.pretty <- bayestax2df(bayes.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
head(idtax.pr2.pretty)
head(idtax.silva.pretty)
head(bayes.pr2.pretty)
idtax.silva.mapped2pr2 <- taxmapper(idtax.silva.pretty,
tt.ranks = colnames(idtax.silva.pretty)[3:ncol(idtax.silva.pretty)],
tax2map2 = "pr2",
exceptions = c("Archaea", "Bacteria"),
ignore.format = TRUE,
synonym.file = "default",
streamline = TRUE,
outfilez = NULL)
head(idtax.silva.mapped2pr2)
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(xx)))
head(eTax1)
eTax2 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=FALSE,
assign.threshold = 0,
weights=c(2,1,1))
head(eTax2)
eTax3 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = c("idtax-pr2"),
count.na=FALSE,
assign.threshold = 0,
weights=c(1,1,1))
head(eTax3)
eTax3 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = c("idtax-pr2"),
count.na=TRUE,
assign.threshold = 0,
weights=c(1,1,1))
head(eTax3)
eTax3 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = c("bayes-pr2"),
count.na=TRUE,
assign.threshold = 0,
weights=c(1,1,1))
head(eTax3)
eTax3 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = c("bayes-pr2"),
count.na=TRUE,
assign.threshold = 0,
weights=c(1,1,2))
head(eTax3)
?is.null
library(ensembleTax)
knitr::opts_chunk$set(echo = TRUE)
eTax3 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = c("bayes-pr2"),
count.na=TRUE,
assign.threshold = 0,
weights=c(1,1,2))
head(eTax3)
library(ensembleTax)
knitr::opts_chunk$set(echo = TRUE)
library("ensembleTax")
data("idtax.pr2.sample")
data("idtax.silva.sample")
data("bayes.sample")
data("rubric.sample")
head(idtax.pr2.sample)
head(idtax.silva.sample)
head(bayes.sample)
head(rubric.sample)
idtax.pr2.pretty <- idtax2df(idtax.pr2.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
idtax.silva.pretty <- idtax2df(idtax.silva.sample,
db = "silva",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
bayes.pr2.pretty <- bayestax2df(bayes.sample,
db = "pr2",
ranks = NULL,
boot = 50,
rubric = rubric.sample,
return.conf = FALSE)
head(idtax.pr2.pretty)
head(idtax.silva.pretty)
head(bayes.pr2.pretty)
idtax.silva.mapped2pr2 <- taxmapper(idtax.silva.pretty,
tt.ranks = colnames(idtax.silva.pretty)[3:ncol(idtax.silva.pretty)],
tax2map2 = "pr2",
exceptions = c("Archaea", "Bacteria"),
ignore.format = TRUE,
synonym.file = "default",
streamline = TRUE,
outfilez = NULL)
head(idtax.silva.mapped2pr2)
xx <- list(idtax.pr2.pretty, idtax.silva.mapped2pr2, bayes.pr2.pretty)
names(xx) <- c("idtax-pr2", "idtax-silva", "bayes-pr2")
eTax1 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=TRUE,
assign.threshold = 0,
weights=rep(1,length(xx)))
head(eTax1)
eTax2 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = "none",
count.na=FALSE,
assign.threshold = 0,
weights=c(2,1,1))
head(eTax2)
eTax3 <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = c("bayes-pr2"),
count.na=TRUE,
assign.threshold = 0,
weights=c(1,1,2))
head(eTax3)
devtools::document()
library("ensembleTax", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
detach("package:ensembleTax", unload=TRUE)
remove.packages("ensembleTax")
?install_github
install_github("dcat4/ensembleTax")
library("devtools")
install_github("dcat4/ensembleTax")
?check
library(ensembleTax)
R CMD check --as-cran ~/Documents/R/ensembleTax
get(wd)
getwd()
R CMD check --as-cran
citation("dada2")
?build_vignettes
library("devtools")
library("devtools")
?build_vignettes
devtools::build_vignettes(pkg = "~/Documents/R/ensembleTax")
library(ensembleTax)
rmarkdown::render("vignettes/ensembleTax.Rmd", "all")
rmarkdown::render("vignettes/ensembleTax.Rmd", "all")
rmarkdown::render("vignettes/ensembleTax.Rmd", "all")
library(ensembleTax)
source('~/Documents/R/make_enstax_package.R')
?build_manual
devtools::build_manual(pkg = "ensembleTax")
getwd()
devtools::build_manual(pkg = "~/Documents/R/ensembleTax")
devtools::document()
devtools::document()
devtools::build_manual(pkg = "~/Documents/R/ensembleTax")
setwd("~/Documents/R/ensembleTax")
devtools::build_manual(pkg = "~/Documents/R/ensembleTax")
tb <- NA
is.vector(tb)
is.character(tb)
is.data.frame(tb)
library(ensembleTax)
fake1.pr2 <- data.frame(ASV = c("AAAA", "ATCG", "GCGC", "TATA", "TCGA"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c(NA, "Stramenopiles", "Rhizaria", "Stramenopiles", "Alveolata"),
division = c(NA, "Ochrophyta", "Radiolaria", "Opalozoa", "Dinoflagellata"),
class = c(NA, "Bacillariophyta", "Polycystinea", "MAST-12", "Syndiniales"),
order = c(NA, "Bacillariophyta_X", "Collodaria", "MAST-12A", NA),
family = c(NA, "Polar-centric-Mediophyceae", "Collophidiidae", NA, NA),
genus = c(NA, NA, "Collophidium", NA, NA),
species = as.character(c(NA, NA, NA, NA, NA)),
stringsAsFactors = FALSE)
fake2.pr2 <- data.frame(ASV = c("AAAA", "ATCG", "GCGC", "TATA", "TCGA"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c(NA, "Stramenopiles", "Rhizaria", "Stramenopiles", "Alveolata"),
division = c(NA, "Opalozoa", "Radiolaria", "Opalozoa", "Dinoflagellata"),
class = c(NA, NA, "Polycystinea", NA, "Dinophycese"),
order = c(NA, NA, "Collodaria", NA, NA),
family = c(NA, NA, "Collophidiidae", NA, NA),
genus = c(NA, NA, "Collophidium", NA, NA),
species = as.character(c(NA, NA, NA, NA, NA)),
stringsAsFactors = FALSE)
head(fake1.pr2)
head(fake2.pr2)
xx <- list(fake1.pr2, fake2.pr2)
names(xx) <- c("fake1", "fake2")
xx
eTax <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0.5,
weights=rep(1,length(xx)))
head(eTax)
eTax <- ensembleTax(xx,
tablenames = names(xx),
ranknames = c("kingdom", "supergroup", "division","class","order","family","genus","species"),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0.5,
weights=c(2,1))
head(eTax)
